!function(){"use strict";angular.module("iMetric",["ui.router","ngAnimate","highcharts-ng","iMetric.components.login","iMetric.components.preloader","iMetric.components.dashboard","iMetric.components.drivers","iMetric.components.notifications"]).constant("PATHS",function(){var appPath="client/app/";return appPath="../client/app/",{FIREBASE:"https://blistering-heat-5543.firebaseio.com",TEST:"test/",CLIENT:"client/",APP:appPath,ASSETS:"assets/",IMAGES:"assets/img/",STUB:"assets/stub/",COMPONENTS:appPath+"components/",LOGIN:appPath+"components/login/",DASHBOARD:appPath+"components/dashboard/",DRIVERS:appPath+"components/drivers/",NOTIFICATIONS:appPath+"components/notifications/",MENU:appPath+"components/menu/",PRELOADER:appPath+"components/preloader/"}}()).config(["$stateProvider","$urlRouterProvider","$locationProvider","PATHS",function($stateProvider,$urlRouterProvider,$locationProvider,PATHS){$locationProvider.html5Mode(!1).hashPrefix("!"),$stateProvider.state("login",{url:"/login",views:{main:{templateUrl:PATHS.LOGIN+"loginView.html"}}}).state("loading",{url:"/loading",views:{main:{templateUrl:PATHS.PRELOADER+"preloaderView.html"}}}).state("dashboard",{url:"/dashboard",views:{main:{templateUrl:PATHS.DASHBOARD+"dashboardView.html"},"main.notifications@dashboard":{templateUrl:PATHS.NOTIFICATIONS+"notificationPartial.html"}}}).state("dashboard.drivers",{url:"/drivers",views:{"main.data":{templateUrl:PATHS.DRIVERS+"driversView.html"}}}).state("dashboard.notifications",{url:"/notifications",views:{"main.data":{templateUrl:PATHS.NOTIFICATIONS+"notificationsView.html"}}}).state("dashboard.stats",{url:"/stats",views:{"main.data":{templateUrl:PATHS.DASHBOARD+"statsPartial.html"}}}).state("dashboard.map",{url:"/map",views:{"main.data":{templateUrl:PATHS.DASHBOARD+"mapPartial.html"}}}),$urlRouterProvider.otherwise("/login")}]).run(["$location","$rootScope","$state","$stateParams","PATHS",function($location,$rootScope,$state,$stateParams,PATHS){$rootScope.$state=$state,$rootScope.$stateParams=$stateParams,$rootScope.firebase=new Firebase(PATHS.FIREBASE),$location.path("/login")}]).controller("MainController",["$rootScope","$scope","$state","PreloaderService",function($rootScope,$scope){$scope.name="MainController"}]).controller("HeaderController",["$rootScope",function(){}])}(),function(){"use strict";angular.module("Metric.components.preloader.directives",[])}(),function(){"use strict";angular.module("Metric.components.preloader",["Metric.components.preloader.directives"])}(),function(){"use strict";angular.module("Metric.components.preloader.services",[])}(),function(){"use strict";angular.module("iMetric.components.dashboard.directives",[])}(),function(){"use strict";angular.module("iMetric.components.dashboard",["iMetric.components.dashboard.directives","iMetric.components.dashboard.services"]).controller("DashboardController",["$scope","$rootScope","LoginService","PreloaderService","PATHS",function($scope,$rootScope,LoginService,PreloaderService){$scope.state="dashboard",$scope.data=PreloaderService.data,$scope.logout=function(){LoginService.logout()}}]).controller("MapViewController",["$scope","$rootScope","PATHS",function(){function initializeGmaps(){var mapOptions={zoom:13,center:new google.maps.LatLng(37.774546,-122.433523),mapTypeId:google.maps.MapTypeId.SATELLITE};map=new google.maps.Map(document.getElementById("map-canvas"),mapOptions);var pointArray=new google.maps.MVCArray(taxiData);heatmap=new google.maps.visualization.HeatmapLayer({data:pointArray}),heatmap.setMap(map)}var map,heatmap,taxiData=[new google.maps.LatLng(37.768244,-122.428138),new google.maps.LatLng(37.767942,-122.428581),new google.maps.LatLng(37.767482,-122.429094),new google.maps.LatLng(37.767031,-122.429606),new google.maps.LatLng(37.766732,-122.429986),new google.maps.LatLng(37.76668,-122.430058),new google.maps.LatLng(37.766633,-122.430109),new google.maps.LatLng(37.76658,-122.430211),new google.maps.LatLng(37.766367,-122.430594),new google.maps.LatLng(37.76591,-122.431137),new google.maps.LatLng(37.765353,-122.431806),new google.maps.LatLng(37.764962,-122.432298),new google.maps.LatLng(37.764868,-122.432486),new google.maps.LatLng(37.764518,-122.432913),new google.maps.LatLng(37.763435,-122.434173),new google.maps.LatLng(37.762847,-122.434953),new google.maps.LatLng(37.762291,-122.435935),new google.maps.LatLng(37.762224,-122.436074),new google.maps.LatLng(37.761957,-122.436892),new google.maps.LatLng(37.761652,-122.438886),new google.maps.LatLng(37.761284,-122.439955),new google.maps.LatLng(37.76121,-122.440068),new google.maps.LatLng(37.761064,-122.44072),new google.maps.LatLng(37.76104,-122.441411),new google.maps.LatLng(37.761048,-122.442324),new google.maps.LatLng(37.760851,-122.443118),new google.maps.LatLng(37.759977,-122.444591),new google.maps.LatLng(37.759913,-122.444698),new google.maps.LatLng(37.759623,-122.445065),new google.maps.LatLng(37.758902,-122.445158),new google.maps.LatLng(37.758428,-122.44457),new google.maps.LatLng(37.757687,-122.44334),new google.maps.LatLng(37.757583,-122.44324),new google.maps.LatLng(37.757019,-122.442787),new google.maps.LatLng(37.756603,-122.442322),new google.maps.LatLng(37.75638,-122.441602),new google.maps.LatLng(37.75579,-122.441382),new google.maps.LatLng(37.754493,-122.442133),new google.maps.LatLng(37.754361,-122.442206),new google.maps.LatLng(37.753719,-122.44265),new google.maps.LatLng(37.753096,-122.442915),new google.maps.LatLng(37.751617,-122.443211),new google.maps.LatLng(37.751496,-122.443246),new google.maps.LatLng(37.750733,-122.443428),new google.maps.LatLng(37.750126,-122.443536),new google.maps.LatLng(37.750103,-122.443784),new google.maps.LatLng(37.75039,-122.44401),new google.maps.LatLng(37.750448,-122.444013),new google.maps.LatLng(37.750536,-122.44404),new google.maps.LatLng(37.750493,-122.444141),new google.maps.LatLng(37.790859,-122.402808),new google.maps.LatLng(37.790864,-122.402768),new google.maps.LatLng(37.790995,-122.402539),new google.maps.LatLng(37.791148,-122.402172),new google.maps.LatLng(37.791385,-122.401312),new google.maps.LatLng(37.791405,-122.400776),new google.maps.LatLng(37.791288,-122.400528),new google.maps.LatLng(37.791113,-122.400441),new google.maps.LatLng(37.791027,-122.400395),new google.maps.LatLng(37.791094,-122.400311),new google.maps.LatLng(37.791211,-122.400183),new google.maps.LatLng(37.79106,-122.399334),new google.maps.LatLng(37.790538,-122.398718),new google.maps.LatLng(37.790095,-122.398086),new google.maps.LatLng(37.789644,-122.39736),new google.maps.LatLng(37.789254,-122.396844),new google.maps.LatLng(37.788855,-122.396397),new google.maps.LatLng(37.788483,-122.395963),new google.maps.LatLng(37.788015,-122.395365),new google.maps.LatLng(37.787558,-122.394735),new google.maps.LatLng(37.787472,-122.394323),new google.maps.LatLng(37.78763,-122.394025),new google.maps.LatLng(37.787767,-122.393987),new google.maps.LatLng(37.787486,-122.394452),new google.maps.LatLng(37.786977,-122.395043),new google.maps.LatLng(37.786583,-122.395552),new google.maps.LatLng(37.78654,-122.39561),new google.maps.LatLng(37.786516,-122.395659),new google.maps.LatLng(37.786378,-122.395707),new google.maps.LatLng(37.786044,-122.395362),new google.maps.LatLng(37.785598,-122.394715),new google.maps.LatLng(37.785321,-122.394361),new google.maps.LatLng(37.785207,-122.394236),new google.maps.LatLng(37.785751,-122.394062),new google.maps.LatLng(37.785996,-122.393881),new google.maps.LatLng(37.786092,-122.39383),new google.maps.LatLng(37.785998,-122.393899),new google.maps.LatLng(37.785114,-122.394365),new google.maps.LatLng(37.785022,-122.394441),new google.maps.LatLng(37.784823,-122.394635),new google.maps.LatLng(37.784719,-122.394629),new google.maps.LatLng(37.785069,-122.394176),new google.maps.LatLng(37.7855,-122.39365),new google.maps.LatLng(37.78577,-122.393291),new google.maps.LatLng(37.785839,-122.393159),new google.maps.LatLng(37.782651,-122.400628),new google.maps.LatLng(37.782616,-122.400599),new google.maps.LatLng(37.782702,-122.40047),new google.maps.LatLng(37.782915,-122.400192),new google.maps.LatLng(37.783137,-122.399887),new google.maps.LatLng(37.783414,-122.399519),new google.maps.LatLng(37.783629,-122.399237),new google.maps.LatLng(37.783688,-122.399157),new google.maps.LatLng(37.783716,-122.399106),new google.maps.LatLng(37.783798,-122.399072),new google.maps.LatLng(37.783997,-122.399186),new google.maps.LatLng(37.784271,-122.399538),new google.maps.LatLng(37.784577,-122.399948),new google.maps.LatLng(37.784828,-122.40026),new google.maps.LatLng(37.784999,-122.400477),new google.maps.LatLng(37.785113,-122.400651),new google.maps.LatLng(37.785155,-122.400703),new google.maps.LatLng(37.785192,-122.400749),new google.maps.LatLng(37.785278,-122.400839),new google.maps.LatLng(37.785387,-122.400857),new google.maps.LatLng(37.785478,-122.40089),new google.maps.LatLng(37.785526,-122.401022),new google.maps.LatLng(37.785598,-122.401148),new google.maps.LatLng(37.785631,-122.401202),new google.maps.LatLng(37.78566,-122.401267),new google.maps.LatLng(37.803986,-122.426035),new google.maps.LatLng(37.804102,-122.425089),new google.maps.LatLng(37.804211,-122.424156),new google.maps.LatLng(37.803861,-122.423385),new google.maps.LatLng(37.803151,-122.423214),new google.maps.LatLng(37.802439,-122.423077),new google.maps.LatLng(37.80174,-122.422905),new google.maps.LatLng(37.801069,-122.422785),new google.maps.LatLng(37.751266,-122.403355)];initializeGmaps()}])}(),function(){"use strict";angular.module("iMetric.components.dashboard.services",[])}(),function(){"use strict";angular.module("iMetric.components.drivers.directives",[])}(),function(){"use strict";angular.module("iMetric.components.drivers",["iMetric.components.drivers.directives"]).controller("DriversControllers",["$scope","$rootScope","PATHS",function($scope,$rootScope,PATHS){var drivers=new Firebase(PATHS.FIREBASE+"/drivers"),accQuery=(new Firebase(PATHS.FIREBASE+"/stats"),new Firebase(PATHS.FIREBASE+"/stats/acceleration")),decQuery=new Firebase(PATHS.FIREBASE+"/stats/braking"),stopQuery=new Firebase(PATHS.FIREBASE+"/stats/stops"),steadyQuery=new Firebase(PATHS.FIREBASE+"/stats/steady");$scope.driverProfiles=[],$scope.driverChartConfig={options:{legend:{layout:"vertical",align:"right",verticalAlign:"middle",borderWidth:0},chart:{type:"column",events:{redraw:function(){console.log("draw chart")}}}},series:[],title:{text:"Driver Event Summary"},loading:!1,xAxis:{categories:["Accelerations","Deccelerations","Stops","Steadys"],type:"category",labels:{rotation:-45,style:{fontSize:"13px",fontFamily:"Verdana, sans-serif"}}},useHighStocks:!1,size:{width:.8*window.innerWidth,height:300},func:function(){}},$scope.updateDriverSeries=function(){$scope.driverChartConfig.series=[];for(var d in $scope.driverProfiles){var driverProfile=$scope.driverProfiles[d];$scope.driverChartConfig.series.push({name:driverProfile.name+" ("+driverProfile.grade+")",data:[driverProfile.accelerations,driverProfile.decelerations,driverProfile.stops,driverProfile.steadys]})}},$scope.addDriver=function(snapshot){var driverId=snapshot.key(),driverName=snapshot.val().name,driverVehicle=snapshot.val().vehicle,driverLocation=snapshot.val().location,driverGrade=snapshot.val().grade;$scope.driverProfiles.push({id:driverId,name:driverName,grade:driverGrade,location:driverLocation,vehicle:driverVehicle,accelerations:0,decelerations:0,stops:0,steadys:0}),$scope.$$phase||$scope.$apply(),$scope.updateDriverSeries()},$scope.addDriverEvent=function(type,statDriverId){for(var d in $scope.driverProfiles){var driverProfile=$scope.driverProfiles[d];statDriverId==driverProfile.id&&($scope.$$phase?driverProfile[type]++:$scope.$apply(function(){driverProfile[type]++})),$scope.updateDriverSeries()}},$scope.removeDriverEvent=function(type,statDriverId){for(var d in $scope.driverProfiles){var driverProfile=$scope.driverProfiles[d];statDriverId==driverProfile.id&&($scope.$$phase?driverProfile[type]--:$scope.$apply(function(){driverProfile[type]--})),$scope.updateDriverSeries()}},drivers.on("child_added",function(snapshot){$scope.addDriver(snapshot)}),drivers.on("child_removed",function(snapshot){$scope.removeDriver(snapshot)}),accQuery.on("child_added",function(_snapshot){var statDriverId=_snapshot.val().driver;$scope.addDriverEvent("accelerations",statDriverId)}),accQuery.on("child_removed",function(_snapshot){var statDriverId=_snapshot.val().driver;$scope.removeDriverEvent("accelerations",statDriverId)}),decQuery.on("child_added",function(_snapshot){var statDriverId=_snapshot.val().driver;$scope.addDriverEvent("decelerations",statDriverId)}),stopQuery.on("child_added",function(_snapshot){var statDriverId=_snapshot.val().driver;$scope.addDriverEvent("stops",statDriverId)}),steadyQuery.on("child_added",function(_snapshot){var statDriverId=_snapshot.val().driver;$scope.addDriverEvent("steadys",statDriverId)})}])}(),function(){"use strict";angular.module("Metric.components.drivers.services",[])}(),function(){"use strict";angular.module("iMetric.components.login.directives",[])}(),function(){"use strict";angular.module("iMetric.components.login",["iMetric.components.login.directives","iMetric.components.login.services"]).controller("LoginControllers",["$scope","$rootScope","LoginService","$state",function($scope,$rootScope,LoginService,$state){$scope.loggedIn=0,$scope.authDataCallback=function(authData){authData?($scope.loggedIn=1,setTimeout(function(){$state.go("loading")},300),console.log("User "+authData.uid+" is logged in with "+authData.provider)):(console.log("User is logged out"),$(".btn-signin").removeClass("active"))},$scope.attemptLogin=function(){$scope.user.email&&$scope.user.password&&($(".btn-signin").addClass("active"),LoginService.login($scope.user.email,$scope.user.password))},$rootScope.firebase.onAuth($scope.authDataCallback),$scope.loggedIn||$rootScope.$watch("loggedIn",function(value){0!==value&&value||(console.log("should show login form"),$scope.loggedIn=0)})}])}(),function(){"use strict";angular.module("iMetric.components.login.services",[]).factory("LoginService",["$q","$rootScope",function($q,$rootScope){return{login:function(un,pw){var startDefer=$q.defer();return $rootScope.firebase.authWithPassword({email:un,password:pw},function(error){error&&(alert("Sorry, but your credentials are incorrect. Please try again."),$(".btn-signin").removeClass("active"))}),startDefer.promise},logout:function(){console.log("LOGOUT"),$rootScope.loggedIn="false",$rootScope.firebase.unauth()}}}])}(),function(){"use strict";angular.module("iMetric.components.notifications.directives",[])}(),function(){"use strict";angular.module("iMetric.components.notifications",["iMetric.components.notifications.directives","iMetric.components.notifications.services"]).controller("NotificationsViewController",["$scope","$rootScope",function($scope){$scope.greeting="Notification view",$scope.closeNotification=function(event){var el=event.target,container=$($($(el).parent()).parent())[0],containerId=container.id;$("#"+containerId).hide("fast")}}]).controller("NotificationController",["$scope","$rootScope",function($scope){$scope.greeting="Notification popup",$scope.closeNotification=function(event){var el=event.target,container=$($($(el).parent()).parent())[0],containerId=container.id;$("#"+containerId).hide("fast")}}])}(),function(){"use strict";angular.module("iMetric.components.notifications.services",[])}(),function(){"use strict";angular.module("iMetric.components.preloader.directives",[])}(),function(){"use strict";angular.module("iMetric.components.preloader",["iMetric.components.preloader.directives","iMetric.components.preloader.services"]).controller("PreloaderController",["$scope","$rootScope","PreloaderService","$state",function($scope,$rootScope,PreloaderService,$state){$scope.greeting="Preloader Module",$("body").addClass("loading"),PreloaderService.start().then(function(data){console.log("preloader complete, received this data: "),console.log(data),$scope.data=data,setTimeout(function(){$state.go("dashboard.notifications")},2e3)})}])}(),function(){"use strict";angular.module("iMetric.components.preloader.services",[]).factory("PreloaderService",["$q","$rootScope",function($q,$rootScope){return{start:function(){var _this=this,startDefer=$q.defer();return $rootScope.firebase.on("value",function(snapshot){_this.data=snapshot.val(),startDefer.resolve(snapshot.val())}),startDefer.promise},data:{}}}])}();